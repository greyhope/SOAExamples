<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment xmlns:ser="http://www.bea.com/wli/sb/services" xmlns:tran="http://www.bea.com/wli/sb/transports" xmlns:env="http://www.bea.com/wli/config/env" xmlns:http="http://www.bea.com/wli/sb/transports/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:con="http://www.bea.com/wli/sb/pipeline/config" xmlns:con1="http://www.bea.com/wli/sb/stages/config" xmlns:con2="http://www.bea.com/wli/sb/stages/transform/config" xmlns:con3="http://www.bea.com/wli/sb/stages/routing/config">
  <ser:coreEntry isProxy="true" isEnabled="true">
    <ser:binding type="SOAP" isSoap12="false" xsi:type="con:SoapBindingType" xmlns:con="http://www.bea.com/wli/sb/services/bindings/config">
      <con:wsdl ref="MarriageStatusProject/WSDL/MarriageServiceWSDL"/>
      <con:binding>
        <con:name>MarriageServiceWSDLSOAP</con:name>
        <con:namespace>http://www.example.org/MarriageServiceWSDL/</con:namespace>
      </con:binding>
      <con:selector type="SOAP body"/>
    </ser:binding>
    <ser:monitoring isEnabled="false">
      <ser:aggregationInterval>10</ser:aggregationInterval>
      <ser:pipelineMonitoringLevel>Pipeline</ser:pipelineMonitoringLevel>
    </ser:monitoring>
    <ser:reporting>true</ser:reporting>
    <ser:logging isEnabled="true">
      <ser:logLevel>debug</ser:logLevel>
    </ser:logging>
    <ser:sla-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:sla-alerting>
    <ser:pipeline-alerting isEnabled="true">
      <ser:alertLevel>normal</ser:alertLevel>
    </ser:pipeline-alerting>
    <ser:ws-policy>
      <ser:binding-mode>wsdl-policy-attachments</ser:binding-mode>
    </ser:ws-policy>
  </ser:coreEntry>
  <ser:endpointConfig>
    <tran:provider-id>http</tran:provider-id>
    <tran:inbound>true</tran:inbound>
    <tran:URI>
      <env:value>/MarriageStatusProject/Proxy/MarriagePS</env:value>
    </tran:URI>
    <tran:inbound-properties/>
    <tran:all-headers>false</tran:all-headers>
    <tran:provider-specific>
      <http:inbound-properties/>
    </tran:provider-specific>
  </ser:endpointConfig>
  <ser:router>
    <con:pipeline type="request" name="PipelinePairNode1_request">
      <con:stage name="Assign Variables">
        <con:context>
          <con1:varNsDecl namespace="http://www.example.org/MarriageServiceWSDL/" prefix="mar"/>
        </con:context>
        <con:actions>
          <con2:assign varName="idNumber">
            <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7d5a</con1:id>
            <con2:expr>
              <con1:xqueryText>$body/mar:findMarriageStatus/in/text()</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
      <con:stage name="Get Marriage ID">
        <con:context>
          <con1:varNsDecl namespace="http://www.example.org/MarriageServiceWSDL/" prefix="mar"/>
        </con:context>
        <con:actions>
          <con2:assign varName="getMarriageIDRequest">
            <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7cb4</con1:id>
            <con2:expr>
              <con1:xqueryText>&lt;ns1:getMarriageID xmlns:ns1="http://sample.id.thegreyhope.co.za/">
  &lt;arg0>{$idNumber}&lt;/arg0>
&lt;/ns1:getMarriageID></con1:xqueryText>
            </con2:expr>
          </con2:assign>
          <con2:wsCallout>
            <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7cec</con1:id>
            <con2:service xsi:type="ref:BusinessServiceRef" ref="MarriageStatusProject/Business/IDServiceBS" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con2:operation>getMarriageID</con2:operation>
            <con2:request>
              <con2:body>$getMarriageIDRequest</con2:body>
            </con2:request>
            <con2:response>
              <con2:body>getMarriageIDResponse</con2:body>
            </con2:response>
            <con2:requestTransform/>
            <con2:responseTransform/>
          </con2:wsCallout>
          <con2:assign varName="marriageID">
            <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7c29</con1:id>
            <con2:expr>
              <con1:xqueryText>$getMarriageIDResponse/return/text()</con1:xqueryText>
            </con2:expr>
          </con2:assign>
        </con:actions>
      </con:stage>
    </con:pipeline>
    <con:pipeline type="response" name="PipelinePairNode1_response"/>
    <con:flow>
      <con:pipeline-node name="PipelinePairNode1">
        <con:request>PipelinePairNode1_request</con:request>
        <con:response>PipelinePairNode1_response</con:response>
      </con:pipeline-node>
      <con:route-node name="RouteNode1">
        <con:context/>
        <con:actions>
          <con3:route>
            <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7889</con1:id>
            <con3:service ref="MarriageStatusProject/Business/MarriageServiceBS" xsi:type="ref:BusinessServiceRef" xmlns:ref="http://www.bea.com/wli/sb/reference"/>
            <con3:operation>getMarriageStatus</con3:operation>
            <con3:outboundTransform>
              <con2:replace varName="body" contents-only="true">
                <con1:id>_ActionId-306315866889044974--518d1ef1.135052887f6.-7851</con1:id>
                <con2:location>
                  <con1:xpathText>.</con1:xpathText>
                </con2:location>
                <con2:expr>
                  <con1:xqueryText>&lt;ns1:getMarriageStatus xmlns:ns1="http://sample.mid.thegreyhope.co.za/">
   &lt;arg0>{$marriageID}&lt;/arg0>
&lt;/ns1:getMarriageStatus></con1:xqueryText>
                </con2:expr>
              </con2:replace>
            </con3:outboundTransform>
            <con3:responseTransform/>
          </con3:route>
        </con:actions>
      </con:route-node>
    </con:flow>
  </ser:router>
</xml-fragment>